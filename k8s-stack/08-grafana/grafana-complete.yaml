---
# Grafana ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: ebanking-observability
  labels:
    app: grafana
---
# Grafana ConfigMap for provisioning
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: ebanking-observability
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
        jsonData:
          httpMethod: POST
          timeInterval: 15s
      
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        editable: true
        jsonData:
          maxLines: 1000
      
      - name: Elasticsearch
        type: elasticsearch
        access: proxy
        url: http://elasticsearch:9200
        database: "logs-*"
        basicAuth: true
        basicAuthUser: elastic
        editable: true
        secureJsonData:
          basicAuthPassword: "EsEc@re.OddoBhf123"
        jsonData:
          timeField: "@timestamp"
          esVersion: "8.11.0"
          logMessageField: message
          logLevelField: level
      
      - name: Jaeger
        type: jaeger
        access: proxy
        url: http://jaeger:16686
        editable: true
      
      - name: PostgreSQL-Transactions
        type: postgres
        access: proxy
        url: postgresql:5432
        database: grafana_db
        user: grafana_admin
        editable: true
        secureJsonData:
          password: "Grafana.OddoBhf@Secure123"
        jsonData:
          sslmode: "require"
          postgresVersion: 1500
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: ebanking-observability
  labels:
    app: grafana
    component: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: grafana
        component: observability
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-admin-credentials
              key: admin-user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-admin-credentials
              key: admin-password
        - name: GF_SECURITY_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: grafana-admin-credentials
              key: secret-key
        - name: GF_DATABASE_TYPE
          value: "postgres"
        - name: GF_DATABASE_HOST
          value: "postgresql:5432"
        - name: GF_DATABASE_NAME
          value: "grafana_db"
        - name: GF_DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_USER
        - name: GF_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_PASSWORD
        - name: GF_DATABASE_SSL_MODE
          value: "require"
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_USERS_DEFAULT_THEME
          value: "dark"
        - name: GF_SMTP_ENABLED
          value: "true"
        - name: GF_SMTP_HOST
          value: "smtp.gmail.com:587"
        - name: GF_SMTP_USER
          valueFrom:
            secretKeyRef:
              name: grafana-smtp-secret
              key: smtp-user
        - name: GF_SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-smtp-secret
              key: smtp-password
        - name: GF_SMTP_FROM_ADDRESS
          value: "ebanking-alerts@oddo-bhf.com"
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel"
        - name: GF_LOG_LEVEL
          value: "info"
        - name: GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION
          value: "false"
        - name: GF_EXPLORE_ENABLED
          value: "true"
        - name: GF_ALERTING_ENABLED
          value: "true"
        - name: GF_UNIFIED_ALERTING_ENABLED
          value: "true"
        - name: GF_SERVER_ROOT_URL
          value: "https://grafana.oddo-bank.local"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: ebanking-observability
  labels:
    app: grafana
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana
---
# Grafana HorizontalPodAutoscaler (Optional)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: grafana
  namespace: ebanking-observability
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: grafana
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
