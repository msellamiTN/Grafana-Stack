[global_tags]
  env = "production"
  cluster = "ebanking-oddo-bhf"
  region = "eu-central"

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  hostname = ""
  omit_hostname = false

# Outputs
[[outputs.prometheus_client]]
  listen = ":8125"
  path = "/metrics"
  expiration_interval = "60s"
  collectors_exclude = ["goproc"]

# Outputs to Prometheus
[[outputs.prometheus_client.metric_buffer_limit]]
  enabled = true

# Inputs - Docker metrics
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  container_names = []
  timeout = "5s"
  perdevice = true
  total = true
  docker_label_include = ["com.docker.compose.service"]
  docker_label_exclude = []

# Inputs - System metrics
[[inputs.cpu]]
  percpu = true
  metrics = ["cpu_time_guest"]
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.mem]]

[[inputs.net]]
  interfaces = ["eth0", "eth1"]

[[inputs.netstat]]

[[inputs.processes]]

[[inputs.system]]

# Inputs - SQL Server metrics
[[inputs.sqlserver]]
  server = "sql_server:1433"
  username = "sa"
  password = "OdDo.BHF.SecureP@ss123"
  app_name = "Telegraf"
  connection_timeout = "5s"
  query_version = 2
  az_instance_metrics_enabled = false
  az_managed_instance_metrics_enabled = false

# Inputs - Custom metrics from endpoints
[[inputs.http_response]]
  address = "http://auth_service:5001/health"
  response_timeout = "5s"
  method = "GET"
  [inputs.http_response.tags]
    service = "auth"

[[inputs.http_response]]
  address = "http://transaction_service:5002/health"
  response_timeout = "5s"
  method = "GET"
  [inputs.http_response.tags]
    service = "transaction"

[[inputs.http_response]]
  address = "http://kpi_service:5003/health/kpi"
  response_timeout = "5s"
  method = "GET"
  [inputs.http_response.tags]
    service = "kpi"