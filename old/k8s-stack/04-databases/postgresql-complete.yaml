---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: ebanking-observability
  labels:
    app: postgresql
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_DB
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - grafana_admin
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - grafana_admin
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["postgresql"]
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgresql-data
      - name: init-scripts
        configMap:
          name: postgresql-init-scripts
          optional: true
      resources:
        requests:
          cpu: "500m"
          memory: "1Gi"
        limits:
          cpu: "2000m"
          memory: "4Gi"
      securityContext:
        runAsUser: 999
        fsGroup: 999
        readOnlyRootFilesystem: true
      livenessProbe:
        exec:
          command:
          - pg_isready
          - -U
          - grafana_admin
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
      readinessProbe:
        exec:
          command:
          - pg_isready
          - -U
          - grafana_admin
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 3
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgresql-pdb
  namespace: ebanking-observability
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: postgresql
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postgresql-hpa
  namespace: ebanking-observability
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: postgresql
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: ebanking-observability
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgresql
---
# PostgreSQL Init Scripts ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-init-scripts
  namespace: ebanking-observability
data:
  init.sql: |
    -- Create additional databases for e-banking
    CREATE DATABASE IF NOT EXISTS transactions_db;
    CREATE DATABASE IF NOT EXISTS customer_db;
    
    -- Grant permissions
    GRANT ALL PRIVILEGES ON DATABASE grafana_db TO grafana_admin;
    GRANT ALL PRIVILEGES ON DATABASE transactions_db TO grafana_admin;
    GRANT ALL PRIVILEGES ON DATABASE customer_db TO grafana_admin;
